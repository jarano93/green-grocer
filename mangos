#!/bin/zsh

readonly OUTPUT_DIR="fresh_mangos"
readonly CONFIG_FILE="$HOME/.config/mangos.data"
readonly SLEEP_TIME=1
readonly DIR=$(dirname $0)
readonly PY="$DIR/py2"
readonly JS="$DIR/js"
readonly ZSH="$DIR/zsh"
MEMBER_ID=$(grep "member_id" $CONFIG_FILE | grep -Po "=.+" | grep -Po "\w+")
PASS_HASH=$(grep "pass_hash" $CONFIG_FILE | grep -Po "=.+" | grep -Po "\w+")

clean_dir () {
    if [ -d "$HOME/$OUTPUT_DIR/$1" ]
    then
        rm -rf "$HOME/$OUTPUT_DIR/$1"
    fi
    mkdir "$HOME/$OUTPUT_DIR/$1"
}

clean_subdir () {
    if [ -d "$HOME/$OUTPUT_DIR/$1/$2" ]
    then
        rm -rf "$HOME/$OUTPUT_DIR/$1/$2"
    fi
    mkdir "$HOME/$OUTPUT_DIR/$1/$2"
}

get_page_urls () {
    page_html=$(phantomjs $JS/page_html.js $MEMBER_ID $PASS_HASH $1)
    echo $(python2 $PY/get_page_urls.py $(echo $page_html) | grep -Po '<option [^\n]+>' | grep -Po 'http://bato.to/reader#\w+')
}

line () {
    if (( $2 == 1 ))
    then
        echo $(echo $1 | head -n 1)
    else
        echo $(echo $1 | head -n $2 | tail -n 1)
    fi
}

populate_subdir () {
    page_urls=($(get_page_urls $1))
    for page_url in $page_urls
    do
        sleep $SLEEP_TIME
        zsh $ZSH/get_image.zsh $MEMBER_ID $PASS_HASH $page_url "$HOME/$OUTPUT_DIR/$2/$3"
    done
}


if [ ! -d "$HOME/$OUTPUT_DIR" ]
then
    mkdir $HOME/$OUTPUT_DIR
fi

echo "connecting to: $1"

# get series page HTML
SERIES_HTML=$(phantomjs $JS/series_html.js $MEMBER_ID $PASS_HASH $1)
# scrape series page HTML
series_name=$(python2 $PY/get_series_name.py $(echo $SERIES_HTML))
chapter_urls=$(python2 $PY/get_chapter_urls.py $(echo $SERIES_HTML))
# get english row HTML because python can't handle unicode, fam
sleep $SLEEP_TIME
eng_row=$(phantomjs $JS/eng_row_html.js $MEMBER_ID $PASS_HASH $1)
chapter_names=$(zsh $ZSH/get_chapter_names.zsh $eng_row)
chapter_groups=$(zsh $ZSH/get_chapter_groups.zsh $eng_row)

echo "Series: $series_name"
length=$(echo $chapter_urls | wc -l)

series_dir="$series_name"
clean_dir $series_dir

i=$length
j=0
while (( $i > 0 ))
do
    sleep $SLEEP_TIME
    if (( $i == 1))
    then
        ch_name=$(line $chapter_names $i)
        ch_group=$(line $chapter_groups $i)
        ch_url=$(line $chapter_urls $i)
        ch_dir=$(echo "[$ch_group] $ch_name")
        clean_subdir $series_dir $ch_dir
        zsh $ZSH/progress.zsh $(echo "Downloading: $ch_dir --end_status_string $j $length")
        populate_subdir $ch_url $series_dir $ch_dir
    else
        ch_name=$(line $chapter_names $i)
        ch_group=$(line $chapter_groups $i)
        ch_url=$(line $chapter_urls $i)
        ch_dir=$(echo "[$ch_group] $ch_name")
        clean_subdir $series_dir $ch_dir
        zsh $ZSH/progress.zsh $(echo "Downloading: $ch_dir --end_status_string $j $length")
        populate_subdir $ch_url $series_dir $ch_dir
    fi
    (( i-- ))
    (( j++ ))
done
zsh $ZSH/progress.zsh  $(echo "Downloaded: $series_name! --end_status_string $length $length")
